name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/node-app:latest ./app

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/node-app:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Initialize Terraform
      working-directory: ./Terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init

    - name: Apply Terraform
      working-directory: ./Terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve -var="docker_image=${{ secrets.DOCKER_USERNAME }}/node-app:latest"

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: SSH into EC2 and deploy container
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          echo "🔁 Pulling latest Docker image..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/node-app:latest

          echo "🛑 Stopping and removing old container if it exists..."
          CONTAINER_ID=$(sudo docker ps -q --filter "name=node-app")
          if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop node-app
            sudo docker rm node-app
            echo "✅ Old container removed."
          else
            echo "ℹ️ No existing container to remove."
          fi

          echo "🚀 Starting new container..."
          sudo docker run -d -p 3000:3000 --name node-app ${{ secrets.DOCKER_USERNAME }}/node-app:latest

          echo "✅ Deployment complete."
        EOF
